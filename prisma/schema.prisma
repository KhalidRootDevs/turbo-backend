generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum StreamType {
  OWN_STREAM
  RESTRICTED
  M3U8
  WEB
}

enum VideoType {
  NONE
  YOUTUBE
  SPORTMONK
}

enum ThumbnailType {
  NONE
  URL
  IMAGE
}

enum NotificationType {
  ONE_SIGNAL
  FCM
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  password      String
  adminType     String?   @default("user")
  emailVerified DateTime?
  image         String?
  salt          String?
  status        Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Match {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  fixtureId     String?
  matchTime     String
  matchTitle    String
  teamOneName   String
  teamOneImage  String
  teamTwoName   String
  teamTwoImage  String
  matchStatus   Boolean
  streamingSources Stream[]
}

model Stream {
  id                 String      @id @default(auto()) @map("_id") @db.ObjectId
  matchId            String      @db.ObjectId
  streamTitle        String
  isPremium          Boolean
  resolution         String
  platform           String
  portraitWatermark  String
  landscapeWatermark String
  streamType         StreamType  @default(OWN_STREAM)
  streamUrl          String?
  headers            String?
  streamKey          String?
  match              Match       @relation(fields: [matchId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Highlight {
  id                 String          @id @default(auto()) @map("_id") @db.ObjectId
  fixtureId          String?
  title              String
  shortDescription   String?
  status             Boolean
  youtubeUrl         String?
  youtubeThumbnail   String?
  videoType          VideoType       @default(NONE)
  thumbnailType      ThumbnailType  @default(NONE)
  imageUrl           String?
  imageFile          String?
}

model AppSettings {
  id                  String            @id @default(auto()) @map("_id") @db.ObjectId
  notificationType    NotificationType  @default(ONE_SIGNAL)
  name                String            @default("appsettings") @unique
  oneSignalAppID      String?
  oneSignalApiKey     String?
  firebaseServerKey   String?
  firebaseTopics      String?
  sportsApiBasedUrl   String?
  sportsApiKey        String?
  androidSettings     Json?
  iosSettings         Json?
}

model News {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  image       String
  date        DateTime?
}
